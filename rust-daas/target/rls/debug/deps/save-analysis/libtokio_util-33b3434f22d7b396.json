{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1","program":"C:\\Users\\dsietz\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=33b3434f22d7b396","-C","extra-filename=-33b3434f22d7b396","--out-dir","c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps","-L","dependency=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps","--extern","bytes=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libbytes-ef3db01802a5f45f.rmeta","--extern","futures_core=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libfutures_core-84e8fa7eb3fc4e60.rmeta","--extern","futures_sink=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libfutures_sink-4acd836f2a30b91a.rmeta","--extern","log=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\liblog-5ad990aebd1dfc75.rmeta","--extern","pin_project_lite=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libpin_project_lite-97fd89a41bb5ede7.rmeta","--extern","tokio=c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libtokio-cd81784b3486b25f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\dsietz\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\workspace\\daas-workshop\\rust-daas\\target\\rls\\debug\\deps\\libtokio_util-33b3434f22d7b396.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[14218649841816079388,15647911791948508910]},"crate_root":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","num":13,"id":{"name":"bytes","disambiguator":[8981978304210492993,15264612366777067051]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":14,"id":{"name":"tokio","disambiguator":[18019673459414453451,9374645099981732061]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[10041617570366770417,17071158628149077464]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","num":16,"id":{"name":"futures_core","disambiguator":[12963715141013159285,3038742019757248161]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":17,"id":{"name":"mio","disambiguator":[9002346267598051828,11767876024506207957]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":18,"id":{"name":"net2","disambiguator":[15189303785855750383,262683010262701193]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":19,"id":{"name":"winapi","disambiguator":[12529857638400719496,13675067566584875412]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":20,"id":{"name":"cfg_if","disambiguator":[2165763469786474795,14178114571539448228]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":21,"id":{"name":"iovec","disambiguator":[9689856646464831663,12233100421049864452]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":22,"id":{"name":"slab","disambiguator":[1657736844673858948,4799659702385612706]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":23,"id":{"name":"miow","disambiguator":[5848141218508705901,9125564191999577768]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":24,"id":{"name":"kernel32","disambiguator":[12692266109254860818,739368740264122786]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":25,"id":{"name":"winapi","disambiguator":[1488000127055527699,14957387292748120606]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":26,"id":{"name":"ws2_32","disambiguator":[16508685907177915124,17974386282251928196]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","num":27,"id":{"name":"log","disambiguator":[14106067118598377794,3439336256010636974]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":28,"id":{"name":"lazy_static","disambiguator":[10261200952311231637,10970365695526097638]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":29,"id":{"name":"memchr","disambiguator":[10495233528476339445,13262374927720264740]}},{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":30,"id":{"name":"futures_sink","disambiguator":[7817175049483958158,13504236317235875527]}}],"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701913,"byte_end":6701923,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701962,"byte_end":6701969,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702008,"byte_end":6702015,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702053,"byte_end":6702059,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702061,"byte_end":6702072,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702120,"byte_end":6702130,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702179,"byte_end":6702190,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702252,"byte_end":6702272,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702274,"byte_end":6702299,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702348,"byte_end":6702358,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702360,"byte_end":6702375,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701465,"byte_end":6701512,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701513,"byte_end":6701516,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701517,"byte_end":6701585,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701586,"byte_end":6701661,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701662,"byte_end":6701710,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701711,"byte_end":6701714,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701715,"byte_end":6701754,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701755,"byte_end":6701796,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701797,"byte_end":6701834,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6701835,"byte_end":6701867,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703652,"byte_end":6703662,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702504,"byte_end":6702589,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702590,"byte_end":6702593,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702594,"byte_end":6702632,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702633,"byte_end":6702671,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702672,"byte_end":6702675,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702676,"byte_end":6702689,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702690,"byte_end":6702693,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702694,"byte_end":6702775,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702776,"byte_end":6702779,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702780,"byte_end":6702819,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702820,"byte_end":6702853,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702854,"byte_end":6702883,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702884,"byte_end":6702887,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702888,"byte_end":6702895,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702896,"byte_end":6702914,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702915,"byte_end":6702945,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702946,"byte_end":6702970,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702971,"byte_end":6702978,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6702979,"byte_end":6703008,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703009,"byte_end":6703061,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703062,"byte_end":6703065,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703066,"byte_end":6703084,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703085,"byte_end":6703102,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703103,"byte_end":6703183,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703184,"byte_end":6703218,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703219,"byte_end":6703272,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703273,"byte_end":6703284,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703285,"byte_end":6703292,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703293,"byte_end":6703298,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703299,"byte_end":6703337,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703338,"byte_end":6703391,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703392,"byte_end":6703450,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703451,"byte_end":6703530,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703531,"byte_end":6703543,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703544,"byte_end":6703551,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703552,"byte_end":6703559,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703560,"byte_end":6703563,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703764,"byte_end":6703767,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703691,"byte_end":6703752,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705079,"byte_end":6705086,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704482,"byte_end":6704517,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704518,"byte_end":6704521,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704522,"byte_end":6704591,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704592,"byte_end":6704671,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704672,"byte_end":6704744,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704745,"byte_end":6704769,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704770,"byte_end":6704773,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704774,"byte_end":6704842,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704843,"byte_end":6704920,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704921,"byte_end":6704982,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704983,"byte_end":6704986,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6704987,"byte_end":6705023,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705024,"byte_end":6705068,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705134,"byte_end":6705138,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705093,"byte_end":6705124,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705904,"byte_end":6705909,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705145,"byte_end":6705197,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705202,"byte_end":6705205,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705210,"byte_end":6705279,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705284,"byte_end":6705354,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705359,"byte_end":6705405,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705410,"byte_end":6705413,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705418,"byte_end":6705494,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705499,"byte_end":6705574,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705579,"byte_end":6705654,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705659,"byte_end":6705699,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705704,"byte_end":6705707,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705712,"byte_end":6705786,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705791,"byte_end":6705837,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705842,"byte_end":6705845,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705850,"byte_end":6705894,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708845,"byte_end":6708851,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6705933,"byte_end":6705998,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706003,"byte_end":6706006,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706011,"byte_end":6706085,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706090,"byte_end":6706162,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706167,"byte_end":6706240,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706245,"byte_end":6706288,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706293,"byte_end":6706296,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706301,"byte_end":6706374,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706379,"byte_end":6706442,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706447,"byte_end":6706522,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706527,"byte_end":6706602,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706607,"byte_end":6706630,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706635,"byte_end":6706638,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706643,"byte_end":6706715,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706720,"byte_end":6706794,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706799,"byte_end":6706869,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706874,"byte_end":6706877,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706882,"byte_end":6706950,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6706955,"byte_end":6707026,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707031,"byte_end":6707111,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707116,"byte_end":6707128,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707133,"byte_end":6707136,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707141,"byte_end":6707211,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707216,"byte_end":6707291,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707296,"byte_end":6707333,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707338,"byte_end":6707341,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707346,"byte_end":6707382,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707387,"byte_end":6707431,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707436,"byte_end":6707439,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707444,"byte_end":6707467,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707472,"byte_end":6707475,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707480,"byte_end":6707554,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707559,"byte_end":6707633,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707638,"byte_end":6707691,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707696,"byte_end":6707699,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707704,"byte_end":6707775,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707780,"byte_end":6707850,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707855,"byte_end":6707871,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707876,"byte_end":6707879,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707884,"byte_end":6707897,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707902,"byte_end":6707920,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707925,"byte_end":6707930,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707935,"byte_end":6707961,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6707966,"byte_end":6708003,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708008,"byte_end":6708013,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708018,"byte_end":6708039,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708044,"byte_end":6708049,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708054,"byte_end":6708084,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708089,"byte_end":6708103,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708108,"byte_end":6708139,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708144,"byte_end":6708177,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708182,"byte_end":6708185,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708190,"byte_end":6708283,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708288,"byte_end":6708306,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708311,"byte_end":6708314,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708319,"byte_end":6708391,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708396,"byte_end":6708456,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708461,"byte_end":6708513,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708518,"byte_end":6708580,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708585,"byte_end":6708652,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708657,"byte_end":6708660,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708665,"byte_end":6708693,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708698,"byte_end":6708707,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708712,"byte_end":6708717,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708722,"byte_end":6708729,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708734,"byte_end":6708737,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708742,"byte_end":6708811,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708816,"byte_end":6708837,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709710,"byte_end":6709720,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6708932,"byte_end":6709004,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709009,"byte_end":6709058,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709063,"byte_end":6709066,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709071,"byte_end":6709139,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709144,"byte_end":6709211,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709216,"byte_end":6709284,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709289,"byte_end":6709337,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709342,"byte_end":6709345,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709350,"byte_end":6709418,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709423,"byte_end":6709498,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709503,"byte_end":6709578,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709583,"byte_end":6709655,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6709660,"byte_end":6709702,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711329,"byte_end":6711335,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710138,"byte_end":6710218,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710223,"byte_end":6710299,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710304,"byte_end":6710307,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710312,"byte_end":6710387,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710392,"byte_end":6710462,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710467,"byte_end":6710538,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710543,"byte_end":6710615,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710620,"byte_end":6710678,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710683,"byte_end":6710686,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710691,"byte_end":6710760,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710765,"byte_end":6710840,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710845,"byte_end":6710921,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710926,"byte_end":6710948,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710953,"byte_end":6710956,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6710961,"byte_end":6711034,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711039,"byte_end":6711112,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711117,"byte_end":6711193,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711198,"byte_end":6711201,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711206,"byte_end":6711243,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711248,"byte_end":6711280,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6711285,"byte_end":6711321,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711669,"byte_end":6711676,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711514,"byte_end":6711586,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711587,"byte_end":6711607,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711608,"byte_end":6711611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711612,"byte_end":6711658,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711941,"byte_end":6711946,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711689,"byte_end":6711721,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711726,"byte_end":6711729,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711734,"byte_end":6711811,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711816,"byte_end":6711872,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711877,"byte_end":6711880,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711885,"byte_end":6711931,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712297,"byte_end":6712303,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6711970,"byte_end":6712015,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712020,"byte_end":6712023,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712028,"byte_end":6712102,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712107,"byte_end":6712187,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712192,"byte_end":6712230,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712235,"byte_end":6712238,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6712243,"byte_end":6712289,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6713452,"byte_end":6713458,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6713894,"byte_end":6713896,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6713907,"byte_end":6713912,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715702,"byte_end":6715705,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714360,"byte_end":6714440,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714445,"byte_end":6714526,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714531,"byte_end":6714534,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714539,"byte_end":6714614,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714619,"byte_end":6714689,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714694,"byte_end":6714763,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714768,"byte_end":6714840,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714845,"byte_end":6714903,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714908,"byte_end":6714911,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714916,"byte_end":6714987,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714992,"byte_end":6715069,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715074,"byte_end":6715150,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715155,"byte_end":6715177,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715182,"byte_end":6715185,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715190,"byte_end":6715263,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715268,"byte_end":6715341,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715346,"byte_end":6715422,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715427,"byte_end":6715430,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715435,"byte_end":6715472,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715477,"byte_end":6715509,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715514,"byte_end":6715551,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715556,"byte_end":6715594,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715599,"byte_end":6715690,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717253,"byte_end":6717266,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715857,"byte_end":6715937,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6715942,"byte_end":6716023,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716028,"byte_end":6716077,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716082,"byte_end":6716085,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716090,"byte_end":6716165,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716170,"byte_end":6716240,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716245,"byte_end":6716314,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716319,"byte_end":6716391,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716396,"byte_end":6716454,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716459,"byte_end":6716462,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716467,"byte_end":6716538,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716543,"byte_end":6716620,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716625,"byte_end":6716701,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716706,"byte_end":6716728,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716733,"byte_end":6716736,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716741,"byte_end":6716814,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716819,"byte_end":6716892,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716897,"byte_end":6716973,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716978,"byte_end":6716981,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6716986,"byte_end":6717023,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717028,"byte_end":6717060,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717065,"byte_end":6717102,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717107,"byte_end":6717145,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717150,"byte_end":6717241,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719135,"byte_end":6719145,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717557,"byte_end":6717637,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717642,"byte_end":6717723,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717728,"byte_end":6717731,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717736,"byte_end":6717811,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717816,"byte_end":6717886,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717891,"byte_end":6717962,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717967,"byte_end":6718039,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718044,"byte_end":6718102,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718107,"byte_end":6718110,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718115,"byte_end":6718186,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718191,"byte_end":6718268,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718273,"byte_end":6718349,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718354,"byte_end":6718376,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718381,"byte_end":6718384,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718389,"byte_end":6718468,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718473,"byte_end":6718550,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718555,"byte_end":6718558,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718563,"byte_end":6718636,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718641,"byte_end":6718714,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718719,"byte_end":6718795,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718800,"byte_end":6718803,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718808,"byte_end":6718845,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718850,"byte_end":6718882,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718887,"byte_end":6718925,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718930,"byte_end":6718968,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6718973,"byte_end":6719027,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719032,"byte_end":6719123,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719834,"byte_end":6719841,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719551,"byte_end":6719614,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719619,"byte_end":6719632,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719637,"byte_end":6719640,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719645,"byte_end":6719720,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719725,"byte_end":6719795,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719800,"byte_end":6719822,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720202,"byte_end":6720209,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719911,"byte_end":6719982,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6719987,"byte_end":6720000,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720005,"byte_end":6720008,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720013,"byte_end":6720088,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720093,"byte_end":6720163,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720168,"byte_end":6720190,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720542,"byte_end":6720547,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720291,"byte_end":6720349,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720354,"byte_end":6720367,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720372,"byte_end":6720375,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720380,"byte_end":6720454,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720459,"byte_end":6720530,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720879,"byte_end":6720888,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720620,"byte_end":6720686,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720691,"byte_end":6720704,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720709,"byte_end":6720712,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720717,"byte_end":6720791,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720796,"byte_end":6720867,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721028,"byte_end":6721039,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6720973,"byte_end":6721016,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721366,"byte_end":6721376,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721101,"byte_end":6721164,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721169,"byte_end":6721172,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721177,"byte_end":6721252,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721257,"byte_end":6721327,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721332,"byte_end":6721354,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721771,"byte_end":6721781,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721449,"byte_end":6721523,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721528,"byte_end":6721569,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721574,"byte_end":6721577,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721582,"byte_end":6721657,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721662,"byte_end":6721732,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6721737,"byte_end":6721759,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726143,"byte_end":6726154,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725868,"byte_end":6725939,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725940,"byte_end":6726012,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726013,"byte_end":6726073,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726074,"byte_end":6726077,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726078,"byte_end":6726114,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726240,"byte_end":6726242,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726167,"byte_end":6726231,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726274,"byte_end":6726279,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726252,"byte_end":6726265,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726344,"byte_end":6726352,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726289,"byte_end":6726335,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726439,"byte_end":6726448,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726369,"byte_end":6726430,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726681,"byte_end":6726684,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726629,"byte_end":6726669,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6727413,"byte_end":6727423,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6727881,"byte_end":6727884,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6727813,"byte_end":6727869,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728201,"byte_end":6728214,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728085,"byte_end":6728167,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728172,"byte_end":6728189,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728857,"byte_end":6728864,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728570,"byte_end":6728633,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728638,"byte_end":6728655,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728660,"byte_end":6728663,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728668,"byte_end":6728743,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728748,"byte_end":6728818,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728823,"byte_end":6728845,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729215,"byte_end":6729222,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728920,"byte_end":6728991,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728996,"byte_end":6729013,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729018,"byte_end":6729021,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729026,"byte_end":6729101,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729106,"byte_end":6729176,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729181,"byte_end":6729203,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729559,"byte_end":6729569,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729290,"byte_end":6729357,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729362,"byte_end":6729365,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729370,"byte_end":6729445,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729450,"byte_end":6729520,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729525,"byte_end":6729547,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729684,"byte_end":6729691,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729622,"byte_end":6729672,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729820,"byte_end":6729831,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729750,"byte_end":6729808,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729957,"byte_end":6729968,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6729902,"byte_end":6729945,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6735884,"byte_end":6735895,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736319,"byte_end":6736322,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736250,"byte_end":6736307,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736847,"byte_end":6736854,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736559,"byte_end":6736622,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736627,"byte_end":6736645,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736650,"byte_end":6736653,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736658,"byte_end":6736733,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736738,"byte_end":6736808,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736813,"byte_end":6736835,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737206,"byte_end":6737213,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736910,"byte_end":6736981,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736986,"byte_end":6737004,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737009,"byte_end":6737012,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737017,"byte_end":6737092,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737097,"byte_end":6737167,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737172,"byte_end":6737194,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737551,"byte_end":6737561,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737281,"byte_end":6737349,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737354,"byte_end":6737357,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737362,"byte_end":6737437,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737442,"byte_end":6737512,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737517,"byte_end":6737539,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737676,"byte_end":6737683,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737614,"byte_end":6737664,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737812,"byte_end":6737823,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737742,"byte_end":6737800,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":498},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":505},{"krate":0,"index":370},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":521},{"krate":0,"index":372},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744158,"byte_end":6744210,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744211,"byte_end":6744214,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744215,"byte_end":6744285,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744286,"byte_end":6744344,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744345,"byte_end":6744417,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744418,"byte_end":6744488,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744489,"byte_end":6744556,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744557,"byte_end":6744560,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744561,"byte_end":6744582,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744583,"byte_end":6744586,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744587,"byte_end":6744662,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744663,"byte_end":6744734,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744735,"byte_end":6744806,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744807,"byte_end":6744877,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744878,"byte_end":6744918,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744919,"byte_end":6744922,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744923,"byte_end":6744930,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744931,"byte_end":6744974,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6744975,"byte_end":6745033,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745034,"byte_end":6745037,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745038,"byte_end":6745093,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745094,"byte_end":6745136,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745137,"byte_end":6745142,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745143,"byte_end":6745195,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745196,"byte_end":6745201,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745202,"byte_end":6745224,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745225,"byte_end":6745232,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745233,"byte_end":6745236,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745237,"byte_end":6745309,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745310,"byte_end":6745381,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745382,"byte_end":6745401,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745402,"byte_end":6745405,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745406,"byte_end":6745417,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745418,"byte_end":6745467,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745468,"byte_end":6745517,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745518,"byte_end":6745567,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745568,"byte_end":6745575,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745576,"byte_end":6745579,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745580,"byte_end":6745618,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745619,"byte_end":6745622,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745623,"byte_end":6745630,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745631,"byte_end":6745657,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745658,"byte_end":6745716,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745717,"byte_end":6745720,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745721,"byte_end":6745746,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745747,"byte_end":6745768,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745769,"byte_end":6745772,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745773,"byte_end":6745849,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745850,"byte_end":6745859,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745860,"byte_end":6745902,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745903,"byte_end":6745908,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745909,"byte_end":6745982,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6745983,"byte_end":6746030,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746031,"byte_end":6746034,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746035,"byte_end":6746072,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746073,"byte_end":6746087,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746088,"byte_end":6746093,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746094,"byte_end":6746101,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746102,"byte_end":6746105,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746106,"byte_end":6746148,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746149,"byte_end":6746152,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746153,"byte_end":6746164,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746165,"byte_end":6746204,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746205,"byte_end":6746244,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746245,"byte_end":6746284,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746285,"byte_end":6746292,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746293,"byte_end":6746296,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746297,"byte_end":6746311,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746312,"byte_end":6746315,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746316,"byte_end":6746391,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746392,"byte_end":6746465,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746466,"byte_end":6746532,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746533,"byte_end":6746602,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746603,"byte_end":6746668,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746669,"byte_end":6746672,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746673,"byte_end":6746689,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746690,"byte_end":6746693,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746694,"byte_end":6746770,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746771,"byte_end":6746812,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746813,"byte_end":6746816,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746817,"byte_end":6746824,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746825,"byte_end":6746856,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746857,"byte_end":6746907,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746908,"byte_end":6746949,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746950,"byte_end":6746985,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6746986,"byte_end":6747034,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747035,"byte_end":6747066,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747067,"byte_end":6747115,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747116,"byte_end":6747165,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747166,"byte_end":6747188,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747189,"byte_end":6747196,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747197,"byte_end":6747219,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747220,"byte_end":6747227,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747228,"byte_end":6747231,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747232,"byte_end":6747280,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747281,"byte_end":6747284,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747285,"byte_end":6747296,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747297,"byte_end":6747349,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747350,"byte_end":6747415,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747416,"byte_end":6747481,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747482,"byte_end":6747547,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747548,"byte_end":6747555,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747556,"byte_end":6747559,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747560,"byte_end":6747636,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747637,"byte_end":6747711,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747712,"byte_end":6747784,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747785,"byte_end":6747861,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747862,"byte_end":6747904,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747905,"byte_end":6747908,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747909,"byte_end":6747925,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747926,"byte_end":6747929,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6747930,"byte_end":6748005,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748006,"byte_end":6748047,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748048,"byte_end":6748051,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748052,"byte_end":6748059,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748060,"byte_end":6748091,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748092,"byte_end":6748142,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748143,"byte_end":6748184,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748185,"byte_end":6748220,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748221,"byte_end":6748269,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748270,"byte_end":6748301,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748302,"byte_end":6748350,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748351,"byte_end":6748410,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748411,"byte_end":6748433,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748434,"byte_end":6748441,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748442,"byte_end":6748464,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748465,"byte_end":6748472,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748473,"byte_end":6748476,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748477,"byte_end":6748525,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748526,"byte_end":6748529,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748530,"byte_end":6748541,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748542,"byte_end":6748591,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748592,"byte_end":6748646,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748647,"byte_end":6748701,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748702,"byte_end":6748756,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748757,"byte_end":6748764,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748765,"byte_end":6748768,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748769,"byte_end":6748842,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748843,"byte_end":6748910,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748911,"byte_end":6748914,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748915,"byte_end":6748931,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748932,"byte_end":6748935,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6748936,"byte_end":6749012,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749013,"byte_end":6749085,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749086,"byte_end":6749125,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749126,"byte_end":6749129,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749130,"byte_end":6749137,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749138,"byte_end":6749169,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749170,"byte_end":6749220,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749221,"byte_end":6749262,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749263,"byte_end":6749298,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749299,"byte_end":6749347,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749348,"byte_end":6749379,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749380,"byte_end":6749427,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749428,"byte_end":6749448,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749449,"byte_end":6749471,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749472,"byte_end":6749479,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749480,"byte_end":6749502,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749503,"byte_end":6749510,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749511,"byte_end":6749514,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749515,"byte_end":6749563,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749564,"byte_end":6749567,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749568,"byte_end":6749579,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749580,"byte_end":6749632,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749633,"byte_end":6749698,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749699,"byte_end":6749764,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749765,"byte_end":6749830,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749831,"byte_end":6749838,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749839,"byte_end":6749842,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749843,"byte_end":6749915,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749916,"byte_end":6749991,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6749992,"byte_end":6750064,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750065,"byte_end":6750141,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750142,"byte_end":6750215,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750216,"byte_end":6750219,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750220,"byte_end":6750236,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750237,"byte_end":6750240,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750241,"byte_end":6750315,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750316,"byte_end":6750383,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750384,"byte_end":6750387,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750388,"byte_end":6750395,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750396,"byte_end":6750427,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750428,"byte_end":6750478,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750479,"byte_end":6750520,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750521,"byte_end":6750556,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750557,"byte_end":6750605,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750606,"byte_end":6750637,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750638,"byte_end":6750686,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750687,"byte_end":6750707,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750708,"byte_end":6750730,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750731,"byte_end":6750738,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750739,"byte_end":6750761,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750762,"byte_end":6750769,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750770,"byte_end":6750773,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750774,"byte_end":6750822,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750823,"byte_end":6750826,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750827,"byte_end":6750838,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750839,"byte_end":6750865,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750866,"byte_end":6750911,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750912,"byte_end":6750957,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6750958,"byte_end":6751003,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751004,"byte_end":6751007,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751008,"byte_end":6751036,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751037,"byte_end":6751082,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751083,"byte_end":6751128,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751129,"byte_end":6751174,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751175,"byte_end":6751182,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751183,"byte_end":6751186,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751187,"byte_end":6751259,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751260,"byte_end":6751336,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751337,"byte_end":6751407,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751408,"byte_end":6751477,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751478,"byte_end":6751515,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751516,"byte_end":6751519,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751520,"byte_end":6751594,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751595,"byte_end":6751649,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751650,"byte_end":6751653,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751654,"byte_end":6751670,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751671,"byte_end":6751674,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751675,"byte_end":6751748,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751749,"byte_end":6751825,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751826,"byte_end":6751900,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751901,"byte_end":6751914,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751915,"byte_end":6751918,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751919,"byte_end":6751926,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751927,"byte_end":6751958,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6751959,"byte_end":6752009,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752010,"byte_end":6752051,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752052,"byte_end":6752087,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752088,"byte_end":6752137,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752138,"byte_end":6752169,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752170,"byte_end":6752218,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752219,"byte_end":6752263,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752264,"byte_end":6752286,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752287,"byte_end":6752294,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752295,"byte_end":6752317,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752318,"byte_end":6752325,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752326,"byte_end":6752329,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752330,"byte_end":6752378,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752379,"byte_end":6752382,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752383,"byte_end":6752394,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752395,"byte_end":6752421,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752422,"byte_end":6752472,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752473,"byte_end":6752523,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752524,"byte_end":6752574,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752575,"byte_end":6752578,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752579,"byte_end":6752599,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752600,"byte_end":6752630,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752631,"byte_end":6752661,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752662,"byte_end":6752692,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752693,"byte_end":6752700,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752701,"byte_end":6752704,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752705,"byte_end":6752778,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752779,"byte_end":6752854,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752855,"byte_end":6752927,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752928,"byte_end":6752966,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752967,"byte_end":6752970,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6752971,"byte_end":6753045,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753046,"byte_end":6753122,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753123,"byte_end":6753196,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753197,"byte_end":6753225,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753226,"byte_end":6753229,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753230,"byte_end":6753246,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753247,"byte_end":6753250,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753251,"byte_end":6753324,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753325,"byte_end":6753401,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753402,"byte_end":6753476,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753477,"byte_end":6753549,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753550,"byte_end":6753561,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753562,"byte_end":6753565,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753566,"byte_end":6753573,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753574,"byte_end":6753605,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753606,"byte_end":6753656,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753657,"byte_end":6753698,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753699,"byte_end":6753734,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753735,"byte_end":6753784,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753785,"byte_end":6753816,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753817,"byte_end":6753882,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753883,"byte_end":6753903,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753904,"byte_end":6753926,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753927,"byte_end":6753934,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753935,"byte_end":6753942,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753943,"byte_end":6753946,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753947,"byte_end":6753995,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6753996,"byte_end":6753999,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754000,"byte_end":6754011,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754012,"byte_end":6754038,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754039,"byte_end":6754089,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754090,"byte_end":6754140,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754141,"byte_end":6754191,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754192,"byte_end":6754195,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754196,"byte_end":6754216,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754217,"byte_end":6754247,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754248,"byte_end":6754278,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754279,"byte_end":6754309,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754310,"byte_end":6754317,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754318,"byte_end":6754321,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754322,"byte_end":6754395,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754396,"byte_end":6754470,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754471,"byte_end":6754545,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754546,"byte_end":6754619,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754620,"byte_end":6754696,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754697,"byte_end":6754730,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754731,"byte_end":6754734,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754735,"byte_end":6754749,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754750,"byte_end":6754753,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754754,"byte_end":6754829,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754830,"byte_end":6754902,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754903,"byte_end":6754971,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6754972,"byte_end":6755048,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755049,"byte_end":6755090,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755091,"byte_end":6755094,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755095,"byte_end":6755165,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755166,"byte_end":6755184,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755185,"byte_end":6755188,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755189,"byte_end":6755196,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755197,"byte_end":6755229,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755230,"byte_end":6755280,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755281,"byte_end":6755325,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755326,"byte_end":6755339,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755340,"byte_end":6755375,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755376,"byte_end":6755407,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755408,"byte_end":6755431,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755432,"byte_end":6755439,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755440,"byte_end":6755462,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755463,"byte_end":6755470,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755471,"byte_end":6755474,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755475,"byte_end":6755525,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755526,"byte_end":6755529,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755530,"byte_end":6755541,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755542,"byte_end":6755575,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755576,"byte_end":6755609,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755610,"byte_end":6755643,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755644,"byte_end":6755651,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755652,"byte_end":6755655,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755656,"byte_end":6755736,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755737,"byte_end":6755779,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755780,"byte_end":6755824,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755825,"byte_end":6755870,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755871,"byte_end":6755918,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755919,"byte_end":6755957,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6755958,"byte_end":6756028,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756590,"byte_end":6756597,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756272,"byte_end":6756327,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756328,"byte_end":6756331,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756332,"byte_end":6756407,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756408,"byte_end":6756488,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6756489,"byte_end":6756548,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757268,"byte_end":6757293,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757183,"byte_end":6757256,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757638,"byte_end":6757658,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757314,"byte_end":6757388,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757389,"byte_end":6757392,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757393,"byte_end":6757472,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757473,"byte_end":6757516,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757517,"byte_end":6757520,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757521,"byte_end":6757574,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757575,"byte_end":6757578,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757579,"byte_end":6757609,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758002,"byte_end":6758005,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757911,"byte_end":6757990,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758232,"byte_end":6758239,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758129,"byte_end":6758204,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758209,"byte_end":6758220,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758461,"byte_end":6758477,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758289,"byte_end":6758330,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758335,"byte_end":6758338,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758343,"byte_end":6758416,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758421,"byte_end":6758449,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758898,"byte_end":6758918,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758542,"byte_end":6758576,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758581,"byte_end":6758584,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758589,"byte_end":6758659,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758664,"byte_end":6758739,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758744,"byte_end":6758816,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6758821,"byte_end":6758886,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764194,"byte_end":6764197,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763652,"byte_end":6763727,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763732,"byte_end":6763743,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763748,"byte_end":6763751,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763756,"byte_end":6763770,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763775,"byte_end":6763778,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763783,"byte_end":6763790,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763795,"byte_end":6763826,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763831,"byte_end":6763879,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763884,"byte_end":6763887,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763892,"byte_end":6763933,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763938,"byte_end":6763973,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763978,"byte_end":6764009,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764014,"byte_end":6764045,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764050,"byte_end":6764079,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764084,"byte_end":6764104,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764109,"byte_end":6764131,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764136,"byte_end":6764143,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764148,"byte_end":6764170,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764175,"byte_end":6764182,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765382,"byte_end":6765392,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764861,"byte_end":6764910,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764915,"byte_end":6764918,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764923,"byte_end":6764955,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764960,"byte_end":6764963,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6764968,"byte_end":6765036,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765041,"byte_end":6765044,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765049,"byte_end":6765063,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765068,"byte_end":6765071,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765076,"byte_end":6765083,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765088,"byte_end":6765119,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765124,"byte_end":6765172,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765177,"byte_end":6765180,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765185,"byte_end":6765226,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765231,"byte_end":6765266,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765271,"byte_end":6765292,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765297,"byte_end":6765319,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765324,"byte_end":6765331,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765336,"byte_end":6765358,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765363,"byte_end":6765370,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766024,"byte_end":6766037,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765491,"byte_end":6765543,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765548,"byte_end":6765551,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765556,"byte_end":6765594,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765599,"byte_end":6765602,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765607,"byte_end":6765675,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765680,"byte_end":6765683,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765688,"byte_end":6765702,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765707,"byte_end":6765710,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765715,"byte_end":6765722,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765727,"byte_end":6765758,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765763,"byte_end":6765811,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765816,"byte_end":6765819,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765824,"byte_end":6765865,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765870,"byte_end":6765905,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765910,"byte_end":6765934,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765939,"byte_end":6765961,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765966,"byte_end":6765973,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6765978,"byte_end":6766000,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766005,"byte_end":6766012,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766670,"byte_end":6766683,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766137,"byte_end":6766189,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766194,"byte_end":6766197,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766202,"byte_end":6766240,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766245,"byte_end":6766248,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766253,"byte_end":6766321,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766326,"byte_end":6766329,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766334,"byte_end":6766348,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766353,"byte_end":6766356,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766361,"byte_end":6766368,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766373,"byte_end":6766404,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766409,"byte_end":6766457,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766462,"byte_end":6766465,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766470,"byte_end":6766511,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766516,"byte_end":6766551,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766556,"byte_end":6766580,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766585,"byte_end":6766607,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766612,"byte_end":6766619,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766624,"byte_end":6766646,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766651,"byte_end":6766658,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767764,"byte_end":6767780,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766852,"byte_end":6766881,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766886,"byte_end":6766889,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766894,"byte_end":6766966,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6766971,"byte_end":6766996,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767001,"byte_end":6767004,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767009,"byte_end":6767081,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767086,"byte_end":6767155,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767160,"byte_end":6767233,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767238,"byte_end":6767250,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767255,"byte_end":6767258,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767263,"byte_end":6767338,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767343,"byte_end":6767404,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767409,"byte_end":6767412,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767417,"byte_end":6767431,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767436,"byte_end":6767439,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767444,"byte_end":6767451,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767456,"byte_end":6767487,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767492,"byte_end":6767540,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767545,"byte_end":6767548,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767553,"byte_end":6767594,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767599,"byte_end":6767634,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767639,"byte_end":6767674,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767679,"byte_end":6767701,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767706,"byte_end":6767713,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767718,"byte_end":6767740,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767745,"byte_end":6767752,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768441,"byte_end":6768460,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767877,"byte_end":6767940,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767945,"byte_end":6767948,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6767953,"byte_end":6768004,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768009,"byte_end":6768012,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768017,"byte_end":6768085,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768090,"byte_end":6768093,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768098,"byte_end":6768112,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768117,"byte_end":6768120,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768125,"byte_end":6768132,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768137,"byte_end":6768168,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768173,"byte_end":6768221,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768226,"byte_end":6768229,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768234,"byte_end":6768275,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768280,"byte_end":6768315,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768320,"byte_end":6768351,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768356,"byte_end":6768378,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768383,"byte_end":6768390,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768395,"byte_end":6768417,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768422,"byte_end":6768429,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769119,"byte_end":6769138,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768629,"byte_end":6768695,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768700,"byte_end":6768703,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768708,"byte_end":6768763,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768768,"byte_end":6768771,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768776,"byte_end":6768790,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768795,"byte_end":6768798,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768803,"byte_end":6768810,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768815,"byte_end":6768846,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768851,"byte_end":6768899,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768904,"byte_end":6768907,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768912,"byte_end":6768953,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768958,"byte_end":6768993,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6768998,"byte_end":6769029,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769034,"byte_end":6769056,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769061,"byte_end":6769068,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769073,"byte_end":6769095,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769100,"byte_end":6769107,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769692,"byte_end":6769709,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769241,"byte_end":6769314,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769319,"byte_end":6769337,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769342,"byte_end":6769345,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769350,"byte_end":6769364,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769369,"byte_end":6769372,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769377,"byte_end":6769384,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769389,"byte_end":6769420,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769425,"byte_end":6769473,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769478,"byte_end":6769481,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769486,"byte_end":6769527,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769532,"byte_end":6769567,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769572,"byte_end":6769602,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769607,"byte_end":6769629,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769634,"byte_end":6769641,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769646,"byte_end":6769668,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769673,"byte_end":6769680,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770359,"byte_end":6770367,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769810,"byte_end":6769873,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769878,"byte_end":6769881,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769886,"byte_end":6769947,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769952,"byte_end":6769955,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6769960,"byte_end":6770014,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770019,"byte_end":6770022,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770027,"byte_end":6770041,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770046,"byte_end":6770049,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770054,"byte_end":6770061,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770066,"byte_end":6770097,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770102,"byte_end":6770150,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770155,"byte_end":6770158,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770163,"byte_end":6770204,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770209,"byte_end":6770244,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770249,"byte_end":6770269,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770274,"byte_end":6770296,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770301,"byte_end":6770308,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770313,"byte_end":6770335,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770340,"byte_end":6770347,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770887,"byte_end":6770896,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770465,"byte_end":6770528,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770533,"byte_end":6770536,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770541,"byte_end":6770555,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770560,"byte_end":6770563,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770568,"byte_end":6770575,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770580,"byte_end":6770628,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770633,"byte_end":6770654,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770659,"byte_end":6770694,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770699,"byte_end":6770730,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770735,"byte_end":6770766,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770771,"byte_end":6770800,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770805,"byte_end":6770825,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770830,"byte_end":6770851,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770856,"byte_end":6770863,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6770868,"byte_end":6770875,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771552,"byte_end":6771560,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771048,"byte_end":6771101,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771106,"byte_end":6771109,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771114,"byte_end":6771128,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771133,"byte_end":6771136,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771141,"byte_end":6771148,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771153,"byte_end":6771184,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771189,"byte_end":6771237,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771242,"byte_end":6771245,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771250,"byte_end":6771291,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771296,"byte_end":6771331,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771336,"byte_end":6771367,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771372,"byte_end":6771403,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771408,"byte_end":6771437,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771442,"byte_end":6771462,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771467,"byte_end":6771489,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771494,"byte_end":6771501,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771506,"byte_end":6771528,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771533,"byte_end":6771540,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772133,"byte_end":6772142,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771724,"byte_end":6771778,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771783,"byte_end":6771786,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771791,"byte_end":6771805,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771810,"byte_end":6771813,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771818,"byte_end":6771825,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771830,"byte_end":6771862,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771867,"byte_end":6771917,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771922,"byte_end":6771966,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6771971,"byte_end":6772006,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772011,"byte_end":6772042,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772047,"byte_end":6772070,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772075,"byte_end":6772082,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772087,"byte_end":6772109,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772114,"byte_end":6772121,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772751,"byte_end":6772761,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772303,"byte_end":6772352,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772357,"byte_end":6772360,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772365,"byte_end":6772379,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772384,"byte_end":6772387,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772392,"byte_end":6772399,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772404,"byte_end":6772449,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772454,"byte_end":6772504,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772509,"byte_end":6772565,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772570,"byte_end":6772583,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772588,"byte_end":6772623,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772628,"byte_end":6772659,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772664,"byte_end":6772688,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772693,"byte_end":6772700,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772705,"byte_end":6772727,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6772732,"byte_end":6772739,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774140,"byte_end":6774150,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6773897,"byte_end":6773984,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6773985,"byte_end":6773988,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6773989,"byte_end":6774027,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774028,"byte_end":6774066,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775250,"byte_end":6775253,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774831,"byte_end":6774891,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774896,"byte_end":6774899,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774904,"byte_end":6774914,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774919,"byte_end":6774922,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774927,"byte_end":6774999,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775004,"byte_end":6775077,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775082,"byte_end":6775149,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775154,"byte_end":6775157,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775162,"byte_end":6775238,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776384,"byte_end":6776403,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775411,"byte_end":6775471,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775476,"byte_end":6775479,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775484,"byte_end":6775547,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775552,"byte_end":6775630,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775635,"byte_end":6775702,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775707,"byte_end":6775779,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775784,"byte_end":6775854,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775859,"byte_end":6775882,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775887,"byte_end":6775890,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775895,"byte_end":6775905,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775910,"byte_end":6775913,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775918,"byte_end":6775993,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6775998,"byte_end":6776071,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776076,"byte_end":6776152,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776157,"byte_end":6776230,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776235,"byte_end":6776305,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776310,"byte_end":6776313,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776318,"byte_end":6776372,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776969,"byte_end":6776979,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776531,"byte_end":6776581,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776586,"byte_end":6776589,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776594,"byte_end":6776601,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776606,"byte_end":6776625,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776630,"byte_end":6776668,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776673,"byte_end":6776676,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776681,"byte_end":6776715,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776720,"byte_end":6776767,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776772,"byte_end":6776779,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776784,"byte_end":6776791,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776796,"byte_end":6776834,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776839,"byte_end":6776842,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776847,"byte_end":6776900,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776905,"byte_end":6776945,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6776950,"byte_end":6776957,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781339,"byte_end":6781360,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781293,"byte_end":6781334,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781395,"byte_end":6781397,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781366,"byte_end":6781390,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781271,"byte_end":6781286,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781189,"byte_end":6781244,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703674,"byte_end":6703684,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703835,"byte_end":6703845,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6704172,"byte_end":6704182,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714029,"byte_end":6714033,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714304,"byte_end":6714310,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717538,"byte_end":6717544,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6722111,"byte_end":6722117,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6722379,"byte_end":6722385,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723156,"byte_end":6723162,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723522,"byte_end":6723526,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723664,"byte_end":6723668,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723875,"byte_end":6723879,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724274,"byte_end":6724278,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724559,"byte_end":6724563,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724780,"byte_end":6724784,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725313,"byte_end":6725317,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725698,"byte_end":6725702,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726605,"byte_end":6726616,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6727750,"byte_end":6727760,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728547,"byte_end":6728557,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6730049,"byte_end":6730059,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6730372,"byte_end":6730382,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6731472,"byte_end":6731482,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6732538,"byte_end":6732549,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6733067,"byte_end":6733078,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736201,"byte_end":6736212,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736535,"byte_end":6736546,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737974,"byte_end":6737985,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6738696,"byte_end":6738707,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6739039,"byte_end":6739050,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6739893,"byte_end":6739905,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6740247,"byte_end":6740259,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6742519,"byte_end":6742531,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6742867,"byte_end":6742879,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743014,"byte_end":6743026,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743233,"byte_end":6743245,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743640,"byte_end":6743652,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743932,"byte_end":6743944,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757884,"byte_end":6757904,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6761257,"byte_end":6761277,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6762164,"byte_end":6762184,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763525,"byte_end":6763545,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763638,"byte_end":6763645,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773244,"byte_end":6773251,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773377,"byte_end":6773402,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773560,"byte_end":6773585,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773720,"byte_end":6773745,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774814,"byte_end":6774824,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6777366,"byte_end":6777376,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6780787,"byte_end":6780797,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781120,"byte_end":6781130,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781435,"byte_end":6781450,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781732,"byte_end":6781747,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781864,"byte_end":6781879,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6702201,"byte_end":6702217,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":348}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703674,"byte_end":6703684,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6703835,"byte_end":6703845,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6704172,"byte_end":6704182,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714029,"byte_end":6714033,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6714304,"byte_end":6714310,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6717538,"byte_end":6717544,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6722111,"byte_end":6722117,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":777},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6722379,"byte_end":6722385,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":777},"to":{"krate":30,"index":9}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723156,"byte_end":6723162,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723522,"byte_end":6723526,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723664,"byte_end":6723668,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3076}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6723875,"byte_end":6723879,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":215}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724274,"byte_end":6724278,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":186}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724559,"byte_end":6724563,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3052}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6724780,"byte_end":6724784,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":271}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725313,"byte_end":6725317,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6725698,"byte_end":6725702,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6726605,"byte_end":6726616,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6727750,"byte_end":6727760,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6728547,"byte_end":6728557,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6730049,"byte_end":6730059,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":691},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6730372,"byte_end":6730382,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":691},"to":{"krate":30,"index":9}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6731472,"byte_end":6731482,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6732538,"byte_end":6732549,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6733067,"byte_end":6733078,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736201,"byte_end":6736212,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6736535,"byte_end":6736546,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6737974,"byte_end":6737985,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":605},"to":{"krate":30,"index":9}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6738696,"byte_end":6738707,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":605},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6739039,"byte_end":6739050,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6739893,"byte_end":6739905,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6740247,"byte_end":6740259,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":568},"to":{"krate":30,"index":9}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6742519,"byte_end":6742531,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6742867,"byte_end":6742879,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743014,"byte_end":6743026,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":3076}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743233,"byte_end":6743245,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":14,"index":215}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743640,"byte_end":6743652,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":14,"index":186}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6743932,"byte_end":6743944,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6757884,"byte_end":6757904,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6761257,"byte_end":6761277,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6762164,"byte_end":6762184,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763525,"byte_end":6763545,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6763638,"byte_end":6763645,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773244,"byte_end":6773251,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773377,"byte_end":6773402,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773560,"byte_end":6773585,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6773720,"byte_end":6773745,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6774814,"byte_end":6774824,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6777366,"byte_end":6777376,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6780787,"byte_end":6780797,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781120,"byte_end":6781130,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781435,"byte_end":6781450,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781732,"byte_end":6781747,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\dsietz\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6781864,"byte_end":6781879,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1690}}]}